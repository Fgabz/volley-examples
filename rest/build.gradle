apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

check.dependsOn 'findbugs','pmd','checkstyle'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {

    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.mcxiaoke.volley:library-aar:1.0.+'
    compile 'com.squareup.dagger:dagger:1.2.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'
    compile 'org.apache.commons:commons-lang3:3.2.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'com.squareup.okhttp:okhttp:1.3.0'

    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

 task checkstyle(type: Checkstyle) {
        configFile file('../config/quality/checkstyle/checkstyle.xml')
        source 'src/main/java'
        include '**/*.java'
        exclude '**/gen/**'

        classpath = files()
}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.projectDir}/../config/quality/findbugs/findbugs-filter.xml")
    classes = files("$project.buildDir/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs-${project.name}.xml"
            xml.withMessages true
        } 
    }

    classpath = files()
}


task pmd(type: Pmd) {

    ruleSetFiles = files('../config/quality/pmd/pmd-ruleset.xml')
    ignoreFailures = true
    ruleSets = ["basic", "braces", "strings"]
    
    source 'src'
    include '**/*.java'
    exclude '**/gen/**' 

    reports {
        xml.enabled = true
        html.enabled = false
    }  
}