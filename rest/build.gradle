apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {

    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.mcxiaoke.volley:library-aar:1.0.+'
    compile 'com.squareup.dagger:dagger:1.2.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'
    compile 'org.apache.commons:commons-lang3:3.2.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'com.squareup.okhttp:okhttp:1.3.0'

    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

checkstyle {
    configFile project.file('../config/quality/checkstyle/checkstyle.xml')
    ignoreFailures = false
    showViolations = true
}

android.applicationVariants.all { variant ->
    def name = variant.buildType.name

    def checkstyle = project.tasks.create "checkstyle${name.capitalize()}", Checkstyle
    checkstyle.dependsOn variant.javaCompile
    checkstyle.source variant.javaCompile.source
    checkstyle.classpath = project.fileTree(variant.javaCompile.destinationDir)
    checkstyle.exclude('**/BuildConfig.java')
    checkstyle.exclude('**/R.java')
    project.tasks.getByName("check").dependsOn checkstyle
}


